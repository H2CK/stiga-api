*** STATUS

- fairly substantial mqtt based functionality, i.e. robot and base real-time connections for status, control and settings
- initial rest based functionality, needs more work
- support tools for the api to monitor and control it

*** AUTHENTICATION

stiga_user_and_pass.js is required 

>>module.exports = {
>>    username: 'your_email@gmail.com',
>>    // eslint-disable-next-line sonarjs/no-hardcoded-passwords
>>    password: 'your_password'
>>}

this is not the most elegant solution and this stage and will get reworked

*** COMPONENTS

api -- core API obtained through require ('api/StigaAPI')
    StigaAPI.js
    StigaAPIUtilitiesProtobuf.js, StigaAPIUtilitiesFormat.js
    StigaAPIElements.js, StigaAPIMessages.js
    StigaAPIAuthentication.js, StigaAPICertificates.js
    StigaAPIConnectionServer.js, StigaAPIConnectionMQTT.js, StigaAPIConnectionDevice.js
    StigaAPIBase.js, StigaAPIBaseConnector.js
    StigaAPIDevice.js, StigaAPIDeviceConnector.js
    StigaAPIUser.js, StigaAPINotifications.js, StigaAPIGarage.js, StigaAPIPerimeters.js
    StigaAPIComponent.js, StigaAPIFramework.js

tools -- tools that use the api
    stiga-command -- command line interface
    stiga-monitor -- visual display monitor to capture, listen, intercept and monitor stiga traffic (mqtt and http)
    stiga-analyse -- analyse tool for battery charge, consumption, garden completion and position signals, uses 'capture' data
    stiga-database-exporter -- export database generated by stiga-monitor 'capture' to csv, log or sheets
    stiga-position-viewer -- render web interface with positions using positions in 'capture' data [warning: can be very slow]

tests -- tests for the api
    base & base_connected -- test base functions (http and mqtt)
    robot & robot_connected -- test robot functions (http and mqtt)
    rest -- test http functions (user, notifications, garage, perimeter, etc)

reverse -- reverse engineering tools (largely deprecated and integrated into api and tools)

*** DIRECTORIES

assets -- storage directory for generated assets (images, etc)

data -- storage directory for generated data (monitor capture datbase and listen and intercept l;ogs)

***
